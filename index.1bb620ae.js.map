{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCIA,SAAS,EAAiB,CAAG,EACzB,OAAO,EAAI,OAAO,CAAC,WAAY,OAAO,OAAO,CAAC,KAAM,SAAS,CAAG,EAAG,OAAO,EAAI,WAAW,EAAI,GAAG,IAAI,EACtG,CAEF,IAAM,EAAa,EAAG,SAAS,gBAAgB,CAAC,UAC1C,EAAiB,EAAE,CACnB,EAAS,EAAG,SAAS,gBAAgB,CAAC,WAE5C,EAAU,OAAO,CAAC,SAAC,CAAnB,EACI,EAAG,WAAW,CAAG,EAAiB,EAAG,IAAI,EACzC,EAAe,IAAI,CAAC,EAAiB,EAAG,IAAI,EAChD,GAEA,EAAM,OAAO,CAAC,SAAC,CAAA,CAAI,CAAnB,EACI,IAAI,EAAQ,SAAS,aAAa,CAAC,QACnC,CAAA,EAAM,SAAS,CAAG,CAAc,CAAC,EAAM,CAAC,WAAW,GACnD,EAAM,SAAS,CAAG,cAClB,EAAG,OAAO,CAAC,EACf","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nfunction splitByUpperCase(str) {\n    return str.replace(/([A-Z])/g, \" $1\").replace(/^./, function(str) {\n        return str.toUpperCase();\n    }).trim();\n}\nvar allInputs = _to_consumable_array(document.querySelectorAll(\"input\"));\nvar inputLabelsArr = [];\nvar field = _to_consumable_array(document.querySelectorAll(\".field\"));\nallInputs.forEach(function(el) {\n    el.placeholder = splitByUpperCase(el.name);\n    inputLabelsArr.push(splitByUpperCase(el.name));\n});\nfield.forEach(function(el, index) {\n    var label = document.createElement(\"label\");\n    label.innerText = inputLabelsArr[index].toUpperCase();\n    label.className = \"field-label\";\n    el.prepend(label);\n});\n\n//# sourceMappingURL=index.1bb620ae.js.map\n","'use strict';\r\n\r\n// write code here\r\n\r\nfunction splitByUpperCase(str) {\r\n    return str.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).trim();\r\n  }\r\n\r\nconst allInputs = [...document.querySelectorAll('input')];\r\nconst inputLabelsArr = [];\r\nconst field = [...document.querySelectorAll('.field')];\r\n\r\nallInputs.forEach((el) => {\r\n    el.placeholder = splitByUpperCase(el.name);\r\n    inputLabelsArr.push(splitByUpperCase(el.name));\r\n})\r\n\r\nfield.forEach((el, index) => {\r\n    let label = document.createElement('label');\r\n    label.innerText = inputLabelsArr[index].toUpperCase();\r\n    label.className = 'field-label'\r\n    el.prepend(label);\r\n})\r\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","splitByUpperCase","str","replace","toUpperCase","trim","allInputs","document","querySelectorAll","inputLabelsArr","field","forEach","el","placeholder","push","index","label","createElement","innerText","className","prepend"],"version":3,"file":"index.1bb620ae.js.map"}